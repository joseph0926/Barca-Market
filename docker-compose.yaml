version: '3.9'
services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - 6379:6379
    command: redis-server --loglevel warning
    volumes:
      - ./docker-volumes/cache:/data
  mongodb:
    container_name: mongodb_container
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./docker-volumes/data:/data/db
  mysql:
    container_name: mysql_container
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - MYSQL_USER=barca
      - MYSQL_DATABASE=barca_auth
      - MYSQL_ROOT_PASSWORD=api
      - MYSQL_PASSWORD=api
    ports:
      - 3306:3306
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql
  psql:
    container_name: psql_container
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=barca
      - POSTGRES_DB=barca_reviews
      - POSTGRES_PASSWORD=api
    ports:
      - 5432:5432
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgresql
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13-rc-management-alpine
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=barca
      - RABBITMQ_DEFAULT_PASS=barcapassword
    ports:
      # AMQP
      - 5672:5672
      # Dashboard
      - 15672:15672
  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: 'true'
      discovery.type: single-node
      xpack.security.enabled: 'false'
      xpack.security.authc.api_key.enabled: 'true'
      xpack.monitoring.collection.enabled: 'true'
      xpack.security.enrollment.enabled: 'true'
    ports:
      - 9200:9200
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic
  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.11.1
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
    ports:
      - 5601:5601
    networks:
      - elastic
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch
  gateway:
    container_name: gateway_container
    build:
      context: ./packages/gateway-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 4000:4000
    env_file: ./packages/gateway-service/.env
    environment:
      - ENABLE_APM=0
      - GATEWAY_JWT_TOKEN=4a0ea5289e11618219f1488e25b2
      - JWT_TOKEN=fde8dd24118e4bab218c498d317a
      - NODE_ENV=development
      - SECRET_KEY_ONE=9c5b26438c8d7f7dac12607661f3
      - SECRET_KEY_TWO=3e0b0c40b1a8ceeb5979056abbf6
      - CLIENT_URL=
      - AUTH_BASE_URL=http://localhost:4002
      - USERS_BASE_URL=http://localhost:4003
      - GIG_BASE_URL=http://localhost:4004
      - MESSAGE_BASE_URL=http://localhost:4005
      - ORDER_BASE_URL=http://localhost:4006
      - REVIEW_BASE_URL=http://localhost:4007
      - REDIS_HOST=redis://redis_container:6379
      - ELASTIC_SEARCH_URL=http://elasticsearch_container:9200
      - ELASTIC_APM_SEARCH_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
  notifications:
    container_name: notification_container
    build:
      context: ./packages/notification-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 4001:4001
    env_file: ./packages/notification-service/.env
    environment:
      - ENABLE_APM=0
      - NODE_ENV=development
      - CLIENT_URL=http://localhost:3000
      - RABBITMQ_ENDPOINT=amqp://barca:barcapassword@rabbitmq_container:5672
      - SENDER_EMAIL=triston.braun26@ethereal.email
      - SENDER_EMAIL_PASSWORD=DdxVRfaZcaaUvMkbXz
      - ELASTIC_SEARCH_URL=http://elasticsearch_container:9200
      - ELASTIC_APM_SEARCH_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch

networks:
  elastic:
    name: elastic
# docker compose up -d redis mongodb mysql psql rabbitmq elasticsearch kibana notifications
